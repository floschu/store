name: "release"

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version-file: .github/workflows/.java-version
      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          add-job-summary: on-failure
      - name: "build"
        run: |
          cd lib
          ./gradlew build

  publish:
    needs: [ build ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version-file: .github/workflows/.java-version
      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          add-job-summary: on-failure
      - name: "publish to Maven Central"
        run: |
          cd lib
          ./gradlew publishAndReleaseToMavenCentral --no-daemon --no-parallel --no-configuration-cache
        env:
          storeVersionTag: ${{ github.ref_name }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  github-release:
    needs: [ publish ]
    runs-on: ubuntu-latest
    steps:
      - name: "create GitHub release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref_name }}" \
              --repo="${{ github.repository }}" \
              --title="${{ github.ref_name }}" \
              --generate-notes
